plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.apollographql.apollo'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.the.markers"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.the.markers.TestRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            buildConfigField "String", 'BASE_URL', '"https://api.producthunt.com/v2/api/graphql"'
            buildConfigField "String", 'API_KEY', '"FB04arsv857pwylibTW8uEkr4qUoDrbaCJajx0X7598"'
            buildConfigField "String", 'TOKEN', '"Bearer OL2dW8iakcXYP3GlGGis78WqOV7jxjnHgdcyYvye3jA"'
        }
        release {
            minifyEnabled false
            buildConfigField "String", 'BASE_URL', '"https://api.producthunt.com/v2/api/graphql"'
            buildConfigField "String", 'API_KEY', '"FB04arsv857pwylibTW8uEkr4qUoDrbaCJajx0X7598"'
            buildConfigField "String", 'TOKEN', '"Bearer OL2dW8iakcXYP3GlGGis78WqOV7jxjnHgdcyYvye3jA"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Common
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_ktx_version"

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.navigation:navigation-compose:$compose_navigation"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_viewmodels"
    kapt "androidx.hilt:hilt-compiler:$hilt_viewmodels"
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_compose"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Apollo
    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-android-support:$apollo_version"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$apollo_version"

    // Coil
    implementation "io.coil-kt:coil-compose:$coil_version"

    // Accompanist
    implementation "com.google.accompanist:accompanist-flowlayout:$accompanist_flowlayout_version"

    // Test
    testImplementation "junit:junit:$junit_test_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    implementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    implementation "com.google.guava:guava:$guava_version"
    androidTestImplementation "com.google.truth:truth:$truth_version"
}

apollo {
    generateKotlinModels.set(true)
}